stages:
  - build
  - test
  - despliegue docker pruebas
  - despliegue docker produccion

variables:
  MAVEN_CLI_OPTS2: "-s .m2/settings.xml --batch-mode"
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  VERSION: "$VERSION"
  NEW_VERSION: "n"
  OPTS_VERSION: " -DreleaseVersion=$VERSION -DdevelopmentVersion=$NEWVERSION-SNAPSHOT -DgenerateBackupPoms=false -DES_SNAPSHOT=RELEASE -DpushChanges=false \
    -DlocalCheckout=true "

build:
  tags: 
    - docker 
  stage: build
  image: maven:3.8.1-openjdk-11
  script:
    - if [[ "$CI_COMMIT_BRANCH" != 'master' ]]; then mvn $MAVEN_CLI_OPTS $MAVEN_OPTS clean install -DskipTests; fi;  
#   - if [[ "$CI_COMMIT_BRANCH" == 'master' ]]; then mvn $MAVEN_CLI_OPTS2 $MAVEN_OPTS $OPTS_VERSION release:clean release:prepare release:perform -X; fi;
    - if [[ "$CI_COMMIT_BRANCH" == 'master' ]]; then mvn $MAVEN_CLI_OPTS $MAVEN_OPTS release:prepare release:perform; fi;
  artifacts:
    paths:
      - target/*.jar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .m2/repository

test:
  tags: 
    - docker 
  stage: test
  image: maven:3.8.1-openjdk-11
  script:
    - mvn $MAVEN_CLI_OPTS $MAVEN_OPTS test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .m2/repository

variables:
  ENTORNO: "pru"



despliegue_pruebas:
  tags: 
    - docker 
  stage: despliegue docker pruebas
  image: docker:20.10
  services:
    - docker:20.10-dind
  environment:
    name: pruebas
  script:
#    - pwd
#    - printenv
    - if [[ "$CI_COMMIT_BRANCH" != 'master' ]]; then ENTORNO="pru"; fi;
    - echo $CICD_PASSWORD | docker login --username cicd --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_PROJECT_NAME-$ENTORNO-$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_PROJECT_NAME-$ENTORNO-$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose.yml up -d
  rules:
    - if: '$CI_ENVIRONMENT_NAME == "pruebas" && $CI_COMMIT_BRANCH != "master"'
    - when: never

scan_image:
  image: 
    name: aquasec/trivy:latest
    entrypoint: [""]
  tags:
    - docker
  stage: despliegue docker pruebas
  script:
    - if [[ "$CI_COMMIT_BRANCH" != 'master' ]]; then ENTORNO="pru"; fi;
    - trivy image --exit-code 1 --severity HIGH,CRITICAL $CI_REGISTRY/$CI_PROJECT_PATH:$CI_PROJECT_NAME-$ENTORNO-$CI_COMMIT_SHORT_SHA
  artifacts:
    paths: 
      - target/vulnerabilidades.json
  allow_failure: true 
  dependencies:
    - despliegue_pruebas
  rules:
    - if: '$CI_ENVIRONMENT_NAME == "pruebas" && $CI_COMMIT_BRANCH != "master"'
    - when: never


despliegue_produccion:
  tags: 
    - docker 
  stage: despliegue docker produccion
  image: docker:20.10
  services:
    - docker:20.10-dind
  environment:
    name: produccion
  script:
    - printenv
    - if [[ "$CI_COMMIT_BRANCH" == 'master' ]]; then ENTORNO="pro"; fi;
    - echo $CICD_PASSWORD | docker login --username cicd --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_PROJECT_NAME-$ENTORNO-$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_PROJECT_NAME-$ENTORNO-$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose.yml up -d
  rules:
    - if: '$CI_ENVIRONMENT_NAME == "produccion"  && $CI_COMMIT_BRANCH == "master"'  
      when: manual
    - when: never
